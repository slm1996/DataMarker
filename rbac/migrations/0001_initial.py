# -*- coding: utf-8 -*-
# Generated by Django 1.11.17 on 2018-12-07 17:13
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AbUserInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=32, verbose_name='用户名')),
                ('password', models.CharField(max_length=64, verbose_name='密码')),
            ],
            options={
                'verbose_name': '用户表',
                'verbose_name_plural': '用户表',
            },
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=16, verbose_name='UR名称')),
                ('url', models.CharField(max_length=255, verbose_name='URL路径')),
                ('is_menus', models.BooleanField(default=False, verbose_name='是否可作为菜单？')),
                ('icon', models.CharField(blank=True, max_length=255, null=True, verbose_name='菜单图标')),
            ],
            options={
                'verbose_name': '权限表',
                'verbose_name_plural': '权限表',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=36, verbose_name='角色名称')),
                ('Permissions', models.ManyToManyField(to='rbac.Permission', verbose_name='权限URL')),
            ],
            options={
                'verbose_name': '角色表',
                'verbose_name_plural': '角色表',
            },
        ),
        migrations.AddField(
            model_name='abuserinfo',
            name='roles',
            field=models.ManyToManyField(blank=True, null=True, to='rbac.Role', verbose_name='用户角色'),
        ),
    ]
